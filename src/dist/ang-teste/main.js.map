{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/favorito/favorito.component.css","webpack:///./src/app/favorito/favorito.component.html","webpack:///./src/app/favorito/favorito.component.ts","webpack:///./src/app/routing/routing.module.ts","webpack:///./src/app/teste.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n    \\n<div style=\\\"text-align:center\\\">\\n    \\n    <pre>\\n        {{tarefa | json}}\\n      </pre>\\n    <form method=\\\"post\\\" enctype=\\\"multipart/form-data\\\" form #f=\\\"ngForm\\\">\\n      <input type=\\\"file\\\" name=\\\"filetoupload\\\" #fd=\\\"ngModel\\\" [(ngModel)]=\\\"teste.arquivo\\\" (change)=\\\"fileChange($event)\\\"><br>\\n      <span  class=\\\"input-group-text upload\\\"  (click)=\\\"upload()\\\"  id=\\\"btnUpload\\\">Upload</span>\\n\\n      <input type=\\\"submit\\\">\\n    </form>\\n<!-- <router-outlet></router-outlet> -->\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TesteService, Teste } from './teste.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n\n  ngOnInit() {\n\n  }\n\n  teste: Teste = new Teste();\n  uploadedFiles: Array < File >;\n  cont: Array<any>;\n  constructor(public ts: TesteService, public router: Router) {\n\n  }\n\n  fileChange(element) {\n    this.uploadedFiles = element.target.files;\n  }\n\n  upload() {\n    console.log(this.uploadedFiles);\n    let formData = new FormData();\n    this.cont = new Array();\n    for (var i = 0; i < this.uploadedFiles.length; i++) {\n      this.cont.push(this.uploadedFiles[i].name);\n      formData.append(\"nome\", \"AAAAAA\");\n      formData.append(\"uploads[]\", this.uploadedFiles[i], this.uploadedFiles[i].name);\n    }\n\n    console.log(formData.get(\"uploads[]\"));\n\n    this.ts.upload(formData).subscribe(\n          (dados) => {\n            this.router.navigate([\"/favorito\"]);\n          }\n        );\n  }\n\n  // upload() {\n  //   this.ts.upload(this.teste).subscribe(\n  //     (dados) => {\n  //       this.router.navigate([\"/\"]);\n  //     }\n  //   );\n  // }\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { FavoritoComponent } from './favorito/favorito.component';\n\nimport { RoutingModule } from './routing/routing.module';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FavoritoComponent\n  ],\n  imports: [\n    BrowserModule,\n    RoutingModule,\n    HttpModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  favorito works!\\n  <input type=\\\"text\\\" #ft=\\\"ngModel\\\" [(ngModel)]=\\\"projetos.nome\\\" class=\\\"form-control\\\" id=\\\"tarefa\\\" name=\\\"tarefa\\\" placeholder=\\\"Digite aqui\\\"\\n        required>\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Teste } from '../teste.service';\n\n@Component({\n  selector: 'app-favorito',\n  templateUrl: './favorito.component.html',\n  styleUrls: ['./favorito.component.css']\n})\nexport class FavoritoComponent implements OnInit {\n  projetos = new Teste();\n\n  constructor() { \n    this.projetos.arquivo = \"Projeto1\";\n  }\n\n  ngOnInit() {\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Router, Routes } from \"@angular/router\";\nimport { FavoritoComponent } from '../favorito/favorito.component';\nimport { AppComponent } from '../app.component';\n\nconst rotas: Routes = [\n  {path: \"favorito\", component: FavoritoComponent},\n  {path: \"\", component: AppComponent},\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(rotas)\n  ],\n  exports: [ RouterModule ],\n  declarations: []\n})\n\n\nexport class RoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from \"@angular/common/http\";\n\nexport class Teste {\n  arquivo: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TesteService {\n\n  url: string = \"https://sistema-treinamentos.herokuapp.com/\";\n  // url: string = \"http://localhost:8080/\";\n\n  cabecalhoJson = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n  };\n\n  constructor(public http: HttpClient) { \n    \n  }\n\n  upload(t: FormData): Observable<any> {\n    return this.http.post(this.url + \"upload\", t);\n  } \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}